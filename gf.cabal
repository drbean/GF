name: gf
version: 3.5-darcs

cabal-version: >= 1.8
build-type: Custom
license: OtherLicense
license-file: LICENSE
category: Natural Language Processing, Compiler
synopsis: Grammatical Framework
description: GF, Grammatical Framework, is a programming language for multilingual grammar applications
homepage: http://www.grammaticalframework.org/
bug-reports: http://code.google.com/p/grammatical-framework/issues/list
tested-with: GHC==7.4.2, GHC==7.6.3

data-dir: src
data-files: www/*.html
	    www/P/*.png
	    www/gfse/*.html
	    www/gfse/*.css
	    www/gfse/*.js
	    www/gfse/P/*.png
	    www/gfse/P/*.jpg
            www/js/*.js
	    www/minibar/*.html
	    www/minibar/*.css
	    www/minibar/*.js
	    www/minibar/*.png
	    www/syntax-editor/*.html
	    www/syntax-editor/*.css
	    www/syntax-editor/*.js
	    www/TransQuiz/*.html
	    www/TransQuiz/*.css
	    www/TransQuiz/*.js
	    www/TransQuiz/*.png
	    www/translator/*.html
	    www/translator/*.css
	    www/translator/*.js

source-repository head
  type:     darcs
  location: http://www.grammaticalframework.org/


flag interrupt
  Description: Enable Ctrl+Break in the shell
  Default:     True

flag server
  Description: Include --server mode
  Default:     True

flag new-comp
  Description: Make -new-comp the default
  Default:     True

flag custom-binary
  Description: Use a customised version of the binary package
  Default:     True

Library
  build-depends: base >= 4.2 && <5,
                 array,
                 fst,
                 containers,
                 bytestring,
                 random,
                 pretty,
                 mtl
  hs-source-dirs: src/runtime/haskell

  if flag(custom-binary)
    hs-source-dirs: src/binary
    exposed-modules:
      -- not really part of GF but I have changed the original binary library
      -- and we have to keep the copy for now.
      Data.Binary
      Data.Binary.Put
      Data.Binary.Get
      Data.Binary.Builder
      Data.Binary.IEEE754
  else
    build-depends: binary

  ghc-options: -fwarn-unused-imports
  extensions: 
  exposed-modules: 
    PGF
    PGF.Data
    PGF.Macros
    PGF.Optimize
    PGF.Printer
    PGF.Utilities
  other-modules:
    PGF.CId
    PGF.Binary
    PGF.Expr
    PGF.Generate
    PGF.Linearize
    PGF.Morphology
    PGF.Paraphrase
    PGF.Parse
    PGF.Probabilistic
    PGF.SortTop
    PGF.Tree
    PGF.Type
    PGF.Tokenizer
    PGF.TypeCheck
    PGF.Forest
    PGF.TrieMap
    PGF.VisualizeTree

Executable gf
  build-depends: gf,
                 base >= 4.2 && <5,
                 array,
                 containers,
                 bytestring,
                 filepath,
                 fst,
                 directory,
                 random,
                 time,
                 time-compat,
                 old-locale,
                 process,
                 pretty,
                 mtl,
                 haskeline,
                 parallel>=3,
                 utf8-string
  ghc-options: -threaded -fwarn-unused-imports
  if flag(server)
    build-depends: httpd-shed, network, json, cgi
                   -- ,silently
    cpp-options: -DSERVER_MODE
    other-modules: GFServer
    hs-source-dirs: src/server src/server/transfer src/example-based

  if flag(new-comp)
    cpp-options: -DNEW_COMP

  build-tools: happy
           --, alex>=2 && <3 -- tricky to install in Ubuntu 12.04
  if os(windows)
    build-depends: Win32
  else
    build-depends: unix

  ghc-prof-options: -auto-all

  if impl(ghc>=7.0)
    ghc-options: -rtsopts
  hs-source-dirs: src/compiler

  if !flag(custom-binary)
    build-depends: binary, data-binary-ieee754

  extensions:
  main-is: GF.hs
  other-modules:
    GF.Data.BacktrackM
    GF.Data.Utilities
--  GF.Data.SortedList
    GF.Data.ErrM
    GF.Data.Operations
    GF.Data.Str
    GF.JavaScript.AbsJS
    GF.JavaScript.PrintJS
    GF.Infra.Ident
    GF.Infra.GetOpt
    GF.Infra.Option
    GF.Infra.UseIO
    GF.Infra.CheckM
    GF.System.Catch
    GF.System.Console
    GF.System.Signal
    GF.Command.Commands
    GF.Command.Interpreter
    GF.Command.Abstract
    GF.Command.Parse
    GF.Command.Importing
    GF.Grammar
    GF.Grammar.Lexer
    GF.Grammar.Parser
    GF.Grammar.Grammar
    GF.Grammar.Values
    GF.Grammar.Macros
    GF.Grammar.Lockfield
    GF.Grammar.MMacros
    GF.Grammar.Lookup
    GF.Grammar.Unify
    GF.Grammar.PatternMatch
    GF.Grammar.Printer
    GF.Grammar.ShowTerm
    GF.Grammar.Binary
    GF.Compile.Update
    GF.Compile.CheckGrammar
--  GF.Compile.Refresh
    GF.Compile.Rename
    GF.Compile.ReadFiles
    GF.Compile.GrammarToPGF
    GF.Compile.ToAPI
    GF.Compile.TypeCheck.Abstract
    GF.Compile.TypeCheck.Concrete
    GF.Compile.TypeCheck.ConcreteNew
    GF.Compile.TypeCheck.TC
    GF.Compile.Compute.Abstract
    GF.Compile.Compute.Concrete
    GF.Compile.Compute.ConcreteNew1
    GF.Compile.Compute.ConcreteNew
    GF.Compile.Compute.AppPredefined
    GF.Compile.Compute.Value
    GF.Compile.Compute.Predef
    GF.Compile.Optimize
    GF.Compile.SubExOpt
    GF.Compile.GetGrammar
    GF.Compile.PGFtoHaskell
    GF.Compile.PGFtoProlog
    GF.Compile.PGFtoJS
    GF.Compile
    GF.Index
    GF.Quiz
    GFC
    GFI

  if flag(interrupt)
    cpp-options: -DUSE_INTERRUPT
    other-modules: GF.System.UseSignal
  else
    other-modules: GF.System.NoSignal
